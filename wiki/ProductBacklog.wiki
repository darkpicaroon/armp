#labels Phase-Requirements,Phase-Design,Phase-Implementation
==== About ====
The Product Backlog evolves during the Use Case (new stories, modified importance, ...).
The Product Owner is in charge of "gardening" this table (he is often assisted by the Scrum Master).

=== Backlog ===
<table width="100%" border="0">
<tr>
<td width="auto"></td>
<td width="24">http://fabienrenaud.com/armp/success.gif</td>
<td width="60">_Success_</td>
<td width="24">http://fabienrenaud.com/armp/star-gold.png</td>
<td width="110">_Work in Progress_</td>
<td width="24">http://fabienrenaud.com/armp/star-white.png</td>
<td width="55">_Standy_</td>
<td width="24">http://fabienrenaud.com/armp/warning.gif</td>
<td width="150">_Canceled or Postpone_</td>
</tr>
</table>
||  *[LabelInformation ID]* || *[LabelInformation Description]* || *[LabelInformation How to Demo]* || *[LabelInformation Imp.]* || *[LabelInformation Est.]* || *[LabelInformation Sprint]* || *[LabelInformation Status]* ||
|| US01 || Installation of the [http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/heliossr1 Java eclipse IDE (Helios version)], the [http://developer.android.com/sdk/android-2.2.html SDK for Android 2.2] and the [http://developer.android.com/sdk/eclipse-adt.html ADT plugin]. || Launch _eclipse_ and the _Android SDK and AVD Manager_. || 100 || 1 || [Sprint1 Sprint 1] || http://fabienrenaud.com/armp/success.gif ||
|| US02 || Implementation of an [http://developer.android.com/guide/tutorials/hello-world.html Hello World application for Android] and test with the Android emulator. || Run the test from eclipse. || 99 || 1 || [Sprint1 Sprint 1] || http://fabienrenaud.com/armp/success.gif ||
|| US03 || Download and push on the svn of the [http://android.git.kernel.org/?p=platform/packages/apps/Music.git;a=summary Android stock music application]. || Build and run the base application. [http://code.google.com/p/armp/source/detail?r=33 See revision 33.]|| 98 || 1/2 || [Sprint1 Sprint 1] || http://fabienrenaud.com/armp/success.gif ||
|| US04 || Add a tab displaying a map view on the application. || See the [http://code.google.com/p/armp/wiki/US04_HowToDemo wiki page.] || 97 || 1.5 || [Sprint1 Sprint 1] || http://fabienrenaud.com/armp/success.gif ||
|| US05 || Creation of the music web services comparision matrix. || Read the [MusicWSComparison Music Web Services comparison] page. || 75 || 1/2 || [Sprint1 Sprint 1] || http://fabienrenaud.com/armp/success.gif ||
|| US06 || Study and compare the following web services : Deezer, Last.FM and Grooveshark. || Read the [MusicWSComparison Music Web Services comparison] page. || 74 || 2 || [Sprint1 Sprint 1] || http://fabienrenaud.com/armp/success.gif ||
|| US07 || Study and compare the following web services : Spotify, Pandora and Soundcloud. || Read the [MusicWSComparison Music Web Services comparison] page. || 73 || 2 || [Sprint1 Sprint 1] || http://fabienrenaud.com/armp/success.gif ||
|| US14 || Read and understand the Stock Media Player original source code (cf.  [Sprint1 US03]) by trying to add a _Now Playing_ panel at the bottom of the Map View of ARMP (cf. [Sprint1 US04]). || Look at the onCreate method of the LocalizedMusicActivity.java file and its associated layout. || 96 || 8 || [Sprint2 Sprint 2] || http://fabienrenaud.com/armp/success.gif ||
|| US08 || Download of the OpenAL and build with the NDK. || Follow the beginning of [http://pielot.org/category/ndk-2/ these instructions] || 95 || 3 || [Sprint2 Sprint 2] || http://fabienrenaud.com/armp/success.gif ||
|| US15 || Play a short music with the OpenAL on an ARMP event. || Play a WAV file by following the end of the [http://pielot.org/category/ndk-2/ pielot tutorial]. || 94 || 1 || [Sprint2 Sprint 2] || http://fabienrenaud.com/armp/success.gif ||
|| US16 || Keep playing a background music with the OpenAL after ARMP has been exited. || _It is the default behavior of OpenAL._ || 93 || 2 || [Sprint2 Sprint 2] || http://fabienrenaud.com/armp/success.gif ||
|| US17 || Bind the ARMP GUI to the music played by the OpenAL by displaying track information such as _title_, _artist_, _duration_... || _Cancelled because of only WAV files._  || 92 || 5 || [Sprint2 Sprint 2] || http://fabienrenaud.com/armp/warning.gif ||
|| US09 || Implementation of web hosted music playback with the OpenAL. || Play a web hosted music with OpenAL on Android || 91 || 2 || [Sprint2 Sprint 2] || http://fabienrenaud.com/armp/warning.gif ||
|| US19 || Try to play an OGG file or a MP3 file from Android using the OpenAL. || Play an OGG or MP3 file from ARMP with the OpenAL. || 90 || 5 || [Sprint3 Sprint 3] || http://fabienrenaud.com/armp/warning.gif ||
|| US10 || Find an alternative to OpenAL to play spatialized music on Android. || The API 9 of Android (v2.3.1) supports OpenSL ES which provides 3D audio effects and spatialized music features. || 89 || 2 || [Sprint3 Sprint 3] || http://fabienrenaud.com/armp/success.gif ||
|| US11 || Build, test and understand the OpenSL ES sample (_native-audio_) provided by the NDK. || Run it from eclipse on Android. || 88 || 3 || [Sprint3 Sprint 3] || http://fabienrenaud.com/armp/success.gif ||
|| US12 || Adapt the OpenSL ES sample (cf. [Sprint3 US11]) and reduce the code to the necessary parts to use it with ARMP. || Play a music file from ARMP and with OpenSL ES. || 87 || 1 || [Sprint3 Sprint 3] || http://fabienrenaud.com/armp/success.gif ||
|| US20 || Adapt the _Simple 3D_ example from the [http://www.khronos.org/registry/sles/specs/OpenSL_ES_Specification_1.1.pdf OpenSL ES reference] (page 526) to bring 3D effects to a music played from ARMP. || Play a music with ARMP. If the 3D effect sample is enabled, the music looks like turning around the listener. || 86 || 2 || [Sprint3 Sprint 3] || http://fabienrenaud.com/armp/warning.gif ||
|| US13 || Orientate the music with the Android compass. ||  || 85 || 5 || [Sprint3 Sprint 3] || http://fabienrenaud.com/armp/warning.gif ||
|| US21 || Database design and MySQL implementation. || Check the database page [http://code.google.com/p/armp/wiki/database here]. || 84 || 0.5 || [Sprint4 Sprint 4] || http://fabienrenaud.com/armp/success.gif ||
|| US22 || Implementation of a RESTful WS providing a XML file displaying spots based on location of the user. || getspots method page [http://code.google.com/p/armp/wiki/getspots here] || 83 || 5 || [Sprint4 Sprint 4] || http://fabienrenaud.com/armp/success.gif ||
|| US23 || Implementation of a RESTful WS providing a XML file giving information about channels for a given spot. || getchannels method page [http://code.google.com/p/armp/wiki/getchannels here] || 82  || 2 || [Sprint4 Sprint 4] || http://fabienrenaud.com/armp/success.gif ||
|| US24 || Implementation of a RESTful WS providing a XML file giving music/stream metadata and if it is a stream, the source of the stream. || getmusics method page [http://code.google.com/p/armp/wiki/getmusics here] || 81 || 2 || [Sprint4 Sprint 4] || http://fabienrenaud.com/armp/success.gif ||
|| US25 || Implementation of classes related to data provided by WS (rel. [Sprint4 US22]-[Sprint4 US24]) for the client side. || See the [US25_US26_HowToDemo wiki page] || 80 || 2 || [Sprint4 Sprint 4] || http://fabienrenaud.com/armp/success.gif||
|| US26 || Implementation of a client-side class requesting WS (rel. [Sprint4 US22]-[Sprint4 US24]) and transforming results into Java objects (rel. [Sprint4 US25]). || See the [US25_US26_HowToDemo wiki page] || 79 || 3 || [Sprint4 Sprint 4] || http://fabienrenaud.com/armp/success.gif ||
|| US27 || Display spots on the Google Map view using KML files provided by the WS related to the [Sprint4 US22]. || See the [US27_HowToDemo wiki page] || 78 || 3 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US28 || Display information about channels when clicking on a spot using XML files provided by the WS related to the [Sprint4 US23]. || See the [US28_HowToDemo wiki page] || 77 || 3 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US29 || Display information about streams/musics when clicking on a channel using XML files provided by the WS related to the [Sprint4 US24]. || See the [US29_HowToDemo wiki page] || 76 || 3 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US30 || Playback of a local music listed in the music list associated with a music channel. || See the [US30_HowToDemo wiki page] || 75 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US31 || Update the now playing view regarding the music being played. || See the [US31_HowToDemo wiki page] || 74 || 3 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US32 || Change the icon bound to a music regarding its source and availability. || See the [US32_HowToDemo wiki page] || 73 || 0.5 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/star-white.png ||
|| US33 || Update database tables to support users, friends and statistical data about what channels/genres users are listening to. || See || 72 || 4 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US34 || Update Web Services (WS) _getChannels_ and _getMusics_ to be easier to use and more secured. || See || 71 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US35 || Update WS _getSpots_ to be more secured and use North East, South West coordinates and zoom level to fetch spots. || See || 70 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US36 || Create PHP objects and basic requests matching the new tables of the database. || See || 69 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US37 || Rewrite code that generates XML files in order to use the standard PHP DOM object. || See || 68 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US38 || Implementation of a RESTful WS creating user's friends according to facebook friends. || See the [WS_AddFriends wiki page] || 67 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US39 || Update the WS _getChannels_ to take user's preference into account. || See the [WS_GetChannels wiki page] || 66 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US40 || Implementation of a RESTful WS updating the frequency information about the user's music genre on phone. || See the [WS_SetFrequencyOnPhone wiki page] || 65 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US41 || Implementation of a RESTful WS updating the frequency of listening of a channel. || See the [WS_SetFrequencyOnPhone wiki page] || 64 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US42 || Implementation of a RESTful WS updating the starting time of a channel listening. || See the [WS_SetChannelStartTime wiki page] || 63 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US43 || Implementation of a RESTful WS updating the ending time of a channel listening. || See the [WS_SetChannelEndTime wiki page] || 62 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US44 || Implementation of a RESTful WS that authenticates a user with its Facebook id and UDID information and that initializes a session. || Read the [WS_LoginUser LoginUser] page. || 61 || 3 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US45 || Implementation of a RESTful WS that allows a user to like a channel. || Read the [WS_LikeChannel LikeChannel] page. || 60 || ½ || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US46 || Implementation of a RESTful WS that allows a user to create a spot. || Read the [WS_CreateSpot CreateSpot] page. || 59 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US47 || Implementation of a RESTful WS that allows a user to create a channel. || Read the [WS_CreateChannel CreateChannel] page. || 58 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US48 || Implementation of a RESTful WS that allows a user to add a music to a channel. || Read the [WS_CreateMusic CreateMusic] page. || 57 || 1 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US49 || Implementation of an error system management to obtain easier debug information when an error occurs in a WS. Update all WS to use that system. || Read the [WS_GetMessage GetMessage] page and the PHP code of WS. || 56 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US50 || Implementation of some spatial functions in PHP: _distance between two coordinates_, _radius of earth depending on the latitude_, _destination point given distance and bearing from start point_. || See || 55 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US51 || Implementation of a user-friendly web interface using Google Maps to easily display/add spots, display/add channels, display musics. || [http://fabienrenaud.com/armp/www/adm/ Go to the web site] || 54 || 15 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US52 || Replace the _old database tools_ with the PHP PDO library. || See || 53 || 1½ || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US53 || Improve performances of the WS _addFriends_. || See || 52 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US54 || Update the server's database and upload new WS and web site. || Run some tests on [WS_Description web services]. || 51 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US55 || Update android objects and XML parsers to match changes of WS responses. || See [http://code.google.com/p/armp/source/detail?r=146 revision 146]. || 50 || 2 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/success.gif ||
|| US55 || Implement a Java applet to be able to upload easily multiple musics' metadatas throught the Web UI. || _Not completely finished yet._ || 49 || 6 || [Sprint5 Sprint 5] || http://fabienrenaud.com/armp/warning.gif ||